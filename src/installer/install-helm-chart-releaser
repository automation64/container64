#!/usr/bin/env bash
# Template: 1.0.0
#######################################
# Container64 / Package installer
#
# Author: SerDigital64 (https://github.com/serdigital64)
# Repository: https://github.com/automation64/container64
# Version: 1.0.0
#
#######################################
# Copyright [2023] [serdigital64@gmail.com]
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Imports
#

# Environment Definition. See docs/base-environment.md for details
export CNT64_DEBUG="${CNT64_DEBUG:-}"
export CNT64_BASHLIB64
export CNT64_LOCAL_BIN
export CNT64_OPT_ROOT

# shellcheck source=SCRIPTDIR/../../lib/bashlib64.bash
source "$CNT64_BASHLIB64" || { echo "Error: unable to load bashlib64 (${CNT64_BASHLIB64})" && exit 1; }

#
# Globals
#

export CNT64_HCR_PLATFORM="${CNT64_HCR_PLATFORM:-linux_amd64}"
export CNT64_HCR_SOURCE="${CNT64_HCR_SOURCE:-https://github.com/helm/chart-releaser/releases/download}"
export CNT64_HCR_TARGET="${CNT64_HCR_TARGET:-${CNT64_OPT_ROOT}/chart-releaser}"
export CNT64_HCR_VERSION="${CNT64_HCR_VERSION:-1.6.0}"

#
# Functions
#

#######################################
# Install application packages
#
# Arguments:
#   None. Parameters are imported from Globals
# Outputs:
#   Package installer progress and errors
# Returns:
#   0: package installed ok
#   >0: unable to install package
#######################################
function cnt64_hcr_install() {
  bl64_dbg_app_show_function
  local package_prefix='chart-releaser'
  local package_sufix='.tar.gz'
  local package_name="${package_prefix}_${CNT64_HCR_VERSION}_${CNT64_HCR_PLATFORM}${package_sufix}"
  local package_url="${CNT64_HCR_SOURCE}/v${CNT64_HCR_VERSION}"
  local work_path=''
  local app_target_mode='0755'
  local app_target_owner='root'
  local app_cli_mode='0755'
  local app_cli='cr'

  bl64_msg_show_task 'download application'
  work_path="$(bl64_fs_create_tmpdir)" || return $?
  bl64_rxtx_web_get_file "${package_url}/${package_name}" "${work_path}/${package_name}" &&
    bl64_arc_open_tar "${work_path}/${package_name}" "${work_path}" ||
    return $?

  bl64_msg_show_task 'deploy application'
  bl64_fs_create_dir "$app_target_mode" "$app_target_owner" "$app_target_owner" "$CNT64_HCR_TARGET" &&
    bl64_fs_copy_files "$app_cli_mode" "$app_target_owner" "$app_target_owner" "$CNT64_HCR_TARGET" "${work_path}/${app_cli}" ||
    return $?

  bl64_msg_show_task "publish application to searchable path (${CNT64_LOCAL_BIN})"
  # shellcheck disable=SC2086
  bl64_fs_run_ln $BL64_FS_SET_LN_SYMBOLIC "${CNT64_HCR_TARGET}/${app_cli}" "${CNT64_LOCAL_BIN}/${app_cli}" ||
    return $?

  bl64_msg_show_task 'cleanup temporary files'
  bl64_fs_rm_tmpdir "$work_path"
  return 0
}

#######################################
# Initialize environment
#
# Arguments:
#   None
# Outputs:
#   Initializacion progress messages
# Returns:
#   0: initialization ok
#   >: failed to initialize
#######################################
function cnt64_hcr_initialize() {
  bl64_dbg_app_show_function

  bl64_check_export 'CNT64_LOCAL_BIN' &&
    bl64_check_export 'CNT64_OPT_ROOT' &&
    bl64_arc_setup &&
    bl64_check_privilege_root
}

#
# Main
#

declare cnt64_hcr_installer_description='Install package: Helm Chart Releaser'
declare -i cnt64_hcr_status=0

bl64_msg_all_enable_verbose
bl64_msg_show_batch_start "$cnt64_hcr_installer_description"

[[ -n "$CNT64_DEBUG" ]] && bl64_dbg_all_enable
cnt64_hcr_initialize &&
  cnt64_hcr_install
cnt64_hcr_status=$?

bl64_msg_show_batch_finish "$cnt64_hcr_status" "$cnt64_hcr_installer_description"
exit $cnt64_hcr_status
