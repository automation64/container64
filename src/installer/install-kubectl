#!/usr/bin/env bash
# Template: 1.0.0
#######################################
# Container64 / Package installer
#
# Author: SerDigital64 (https://github.com/serdigital64)
# Repository: https://github.com/automation64/container64
# Version: 1.0.0
#
#######################################
# Copyright [2023] [serdigital64@gmail.com]
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Imports
#

# Environment Definition. See docs/base-environment.md for details
export CNT64_BASHLIB64
export CNT64_DEBUG="${CNT64_DEBUG:-}"
export CNT64_LOCAL_BIN
export CNT64_OPT_ROOT

# shellcheck source=SCRIPTDIR/../../lib/bashlib64.bash
source "$CNT64_BASHLIB64" || { echo "Error: unable to load bashlib64 (${CNT64_BASHLIB64})" && exit 1; }

#
# Globals
#

export CNT64_KUBECTL_PLATFORM="${CNT64_KUBECTL_PLATFORM:-linux/amd64}"
export CNT64_KUBECTL_SOURCE="${CNT64_KUBECTL_SOURCE:-https://dl.k8s.io}"
export CNT64_KUBECTL_TARGET="${CNT64_KUBECTL_TARGET:-${CNT64_OPT_ROOT}/kubectl}"
export CNT64_KUBECTL_VERSION="${CNT64_KUBECTL_VERSION:-2.27}"

#
# Functions
#

#######################################
# Install application packages
#
# Arguments:
#   None. Parameters are imported from Globals
# Outputs:
#   Package installer progress and errors
# Returns:
#   0: package installed ok
#   >0: unable to install package
#######################################
function cnt64_kubectl_install() {
  bl64_dbg_app_show_function
  local package_name='kubectl'
  local package_url="${CNT64_KUBECTL_SOURCE}/release/v${CNT64_KUBECTL_VERSION}/bin/${CNT64_KUBECTL_PLATFORM}"
  local app_target_mode='0755'
  local app_target_owner='root'
  local app_cli_mode='0755'
  local app_cli='kubectl'
  local app_cli_release="${app_cli}-$CNT64_KUBECTL_VERSION}"

  bl64_msg_show_task 'deploy application'
  bl64_fs_create_dir "$app_target_mode" "$app_target_owner" "$app_target_owner" "$CNT64_KUBECTL_TARGET" &&
    bl64_rxtx_web_get_file "${package_url}/${package_name}" "${CNT64_KUBECTL_TARGET}/${app_cli_release}" "$BL64_VAR_OFF" "$app_cli_mode" ||
    return $?

  bl64_msg_show_task "publish application to searchable path (${CNT64_LOCAL_BIN})"
  # shellcheck disable=SC2086
  bl64_fs_run_ln -f $BL64_FS_SET_LN_SYMBOLIC "${CNT64_KUBECTL_TARGET}/${app_cli_release}" "${CNT64_LOCAL_BIN}/${app_cli}" ||
    return $?

  return 0
}

#######################################
# Initialize environment
#
# Arguments:
#   None
# Outputs:
#   Initializacion progress messages
# Returns:
#   0: initialization ok
#   >: failed to initialize
#######################################
function cnt64_kubectl_initialize() {
  bl64_dbg_app_show_function
  bl64_check_export 'CNT64_LOCAL_BIN' &&
    bl64_check_export 'CNT64_OPT_ROOT' &&
    bl64_check_privilege_root
}

#
# Main
#

declare cnt64_kubectl_installer_description='Install package: KubeCTL'
declare -i cnt64_kubectl_status=0

bl64_msg_all_enable_verbose
bl64_msg_show_batch_start "$cnt64_kubectl_installer_description"

[[ -n "$CNT64_DEBUG" ]] && bl64_dbg_all_enable
cnt64_kubectl_initialize &&
  cnt64_kubectl_install
cnt64_kubectl_status=$?

bl64_msg_show_batch_finish "$cnt64_kubectl_status" "$cnt64_kubectl_installer_description"
exit $cnt64_kubectl_status
