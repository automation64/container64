#!/usr/bin/env bash

# shellcheck disable=SC1091
source "/toolbox.env" || exit $?
# shellcheck source=SCRIPTDIR/../../lib/bashlib64.bash disable=SC2154
source "$CNT64_BASHLIB64" || exit $?

#
# Functions
#

function cnt64_pg_provision_13() {
  local source='postgresql:13'
  local packages='postgresql'

  bl64_os_check_version "${BL64_OS_OL}-8" return $?

  bl64_msg_show_task "Enable package repository (${source})"
  bl64_pkg_run_dnf --assumeyes module enable "$source" ||
    return $?

  bl64_msg_show_task 'deploy application'
  # shellcheck disable=SC2086
  bl64_pkg_deploy $packages
}

function cnt64_pg_provision_15() {
  local packages='postgresql15'
  local yum_repo='https://download.postgresql.org/pub/repos/yum/reporpms/EL-9-x86_64/pgdg-redhat-repo-latest.noarch.rpm'

  bl64_os_check_version "${BL64_OS_OL}-9" || return $?

  bl64_msg_show_task 'Disable built-in postgresql yum repository'
  bl64_pkg_run_dnf -qy module disable postgresql &&
    bl64_msg_show_task 'Add postgresql.org yum repository' &&
    bl64_pkg_deploy "$yum_repo" ||
    return $?

  bl64_msg_show_task 'deploy application'
  # shellcheck disable=SC2086
  bl64_pkg_deploy $packages
}

#
# Main
#

declare cnt64_pg_process='Install PostgreSQL CLI'
declare cnt64_pg_target_version="${1:-13}" # Format: X
declare -i cnt64_pg_status=0

[[ -n "$CNT64_DEBUG" ]] && bl64_dbg_lib_enable
bl64_check_privilege_root &&
  bl64_pkg_setup ||
  exit $?

bl64_msg_all_enable_verbose
bl64_msg_show_batch_start "$cnt64_pg_process"

case "$cnt64_pg_target_version" in
13) cnt64_pg_provision_13 ;;
15) cnt64_pg_provision_15 ;;
*) bl64_check_alert_parameter_invalid 'target_version' 'Unsupported PostgreSQL version' ;;
esac
cnt64_pg_status=$?

bl64_msg_show_batch_finish "$cnt64_pg_status" "$cnt64_pg_process"
exit $cnt64_pg_status
