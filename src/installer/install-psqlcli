#!/usr/bin/env bash
# Template: 1.0.0
#######################################
# Container64 / Package installer
#
# Author: SerDigital64 (https://github.com/serdigital64)
# Repository: https://github.com/automation64/container64
# Version: 1.0.0
#
#######################################
# Copyright [2023] [serdigital64@gmail.com]
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Imports
#

# Environment Definition. See docs/base-environment.md for details
export CNT64_BASHLIB64
export CNT64_DEBUG="${CNT64_DEBUG:-}"

# shellcheck source=SCRIPTDIR/../../lib/bashlib64.bash
source "$CNT64_BASHLIB64" || { echo "Error: unable to load bashlib64 (${CNT64_BASHLIB64})" && exit 1; }

#
# Globals
#

export CNT64_PSQLCLI_VERSION="${CNT64_PSQLCLI_VERSION:-15}"

#
# Functions
#

function cnt64_pgcli_install_v13() {
  local repository='postgresql:13'
  local packages='postgresql'

  if bl64_os_match "${BL64_OS_OL}-8"; then
    bl64_msg_show_task "Enable package repository (${repository})"
    bl64_pkg_run_dnf --assumeyes module enable "$repository" ||
      return $?
  fi

  bl64_msg_show_task 'deploy application'
  # shellcheck disable=SC2086
  bl64_pkg_deploy $packages
}

function cnt64_pgcli_install_v15() {
  local packages=''
  local repository=''

  if bl64_os_match "${BL64_OS_OL}-9"; then
    repository='https://download.postgresql.org/pub/repos/yum/reporpms/EL-9-x86_64/pgdg-redhat-repo-latest.noarch.rpm'
    packages='postgresql15'
    bl64_msg_show_task 'Disable built-in postgresql yum repository'
    bl64_pkg_run_dnf -qy module disable postgresql &&
      bl64_msg_show_task 'Add postgresql.org yum repository' &&
      bl64_pkg_deploy "$repository" ||
      return $?
  fi

  bl64_msg_show_task 'deploy packages'
  # shellcheck disable=SC2086
  bl64_pkg_deploy $packages
}

#######################################
# Install application packages
#
# Arguments:
#   None. Parameters are imported from Globals
# Outputs:
#   Package installer progress and errors
# Returns:
#   0: package installed ok
#   >0: unable to install package
#######################################
function cnt64_psqlcli_install() {
  bl64_dbg_app_show_function
  if [[ "$CNT64_PSQLCLI_VERSION" == '13' ]]; then
    cnt64_pgcli_install_v13
  elif [[ "$CNT64_PSQLCLI_VERSION" == '15' ]]; then
    cnt64_pgcli_install_v15
  fi
  # shellcheck disable=SC2181
  (($? != 0)) && return $?

  bl64_msg_show_task 'cleanup temporary files'
  bl64_fs_cleanup_full
  return 0
}

#######################################
# Initialize environment
#
# Arguments:
#   None
# Outputs:
#   Initializacion progress messages
# Returns:
#   0: initialization ok
#   >: failed to initialize
#######################################
function cnt64_psqlcli_initialize() {
  bl64_dbg_app_show_function

  bl64_check_privilege_root &&
    bl64_pkg_setup ||
    return $?

  case "$CNT64_PSQLCLI_VERSION" in
  '13') bl64_os_check_version "${BL64_OS_OL}-8" ;;
  '15') bl64_os_check_version "${BL64_OS_OL}-9" ;;
  *) bl64_check_alert_unsupported "PSQL Version: ${CNT64_PSQLCLI_VERSION}" ;;
  esac
}

#
# Main
#

declare cnt64_psqlcli_installer_description='Install package: PostgreSQL CLI'
declare -i cnt64_psqlcli_status=0

bl64_msg_all_enable_verbose
bl64_msg_show_batch_start "$cnt64_psqlcli_installer_description"

[[ -n "$CNT64_DEBUG" ]] && bl64_dbg_lib_enable
cnt64_psqlcli_initialize &&
  cnt64_psqlcli_install
cnt64_psqlcli_status=$?

bl64_msg_show_batch_finish "$cnt64_psqlcli_status" "$cnt64_psqlcli_installer_description"
exit $cnt64_psqlcli_status
