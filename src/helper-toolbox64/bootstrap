#!/usr/bin/env bash

# shellcheck source=SCRIPTDIR/../loader/bashlib64.bash
source '/bashlib64.bash' || exit $?

#
# Globals
#

export TOOLBOX64_DEBUG

#
# Functions
#

tb64_bs_fix_repository_centos8() {
  bl64_msg_show_task 'Fix centos 8 repository location to use vault'
  bl64_txt_run_sed -i 's/mirrorlist/#mirrorlist/g' /etc/yum.repos.d/CentOS-* &&
    bl64_txt_run_sed -i 's|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.org|g' /etc/yum.repos.d/CentOS-*
}

tb64_bs_fix_repository_ubuntu2104() {
  bl64_msg_show_task 'Fix ubuntu 21.4 repository location to use old-release'
  bl64_txt_run_sed -i -re 's/([a-z]{2}\.)?archive.ubuntu.com|security.ubuntu.com/old-releases.ubuntu.com/g' /etc/apt/sources.list
}

tb64_bs_fix_repository_debian9() {
  bl64_msg_show_task 'Fix ubuntu 9 repository location to use archive'
  local sources='/etc/apt/sources.list'
  printf 'deb http://archive.debian.org/debian/ stretch main contrib non-free\n' >"$sources" &&
    printf 'deb http://archive.debian.org/debian/ stretch-backports main contrib non-free\n' >>"$sources" &&
    printf 'deb http://archive.debian.org/debian-security stretch/updates main contrib non-free\n' >>"$sources"
}

tb64_bs_check_repository() {
  if bl64_os_match "${BL64_OS_CNT}-8"; then
    tb64_bs_fix_repository_centos8
  elif bl64_os_match "${BL64_OS_UB}-21"; then
    tb64_bs_fix_repository_ubuntu2104
  elif bl64_os_match "${BL64_OS_DEB}-9"; then
    tb64_bs_fix_repository_debian9
  fi
}

tb64_bs_provision_sudo() {
  local packages='sudo'
  bl64_msg_show_task 'Install sudo'
  if bl64_os_match "${BL64_OS_SLES}"; then
    packages+=' gawk'
  fi
  # shellcheck disable=SC2086
  bl64_pkg_deploy $packages
}

tb64_bs_provision_tb64() {
  local sysadmin_user='sysadmin'
  local sysadmin_home='/sa'
  local sysadmin_tmp='/sa/tmp'
  local sysadmin_lib='/sa/lib'
  local sysadmin_bin='/sa/bin'
  local sysadmin_var='/sa/var'
  local sysadmin_local='/usr/local'
  local sysadmin_local_bin="${sysadmin_local}/bin"
  local sysadmin_env='/toolbox64.env'
  local sysadmin_bashlib64="${sysadmin_lib}/bashlib64.bash"

  bl64_msg_show_task 'Create sysadmin user'
  bl64_iam_user_add "${sysadmin_user}" "$sysadmin_home" &&
    bl64_rbac_add_root "${sysadmin_user}" ||
    return $?

  bl64_msg_show_task 'Create directory structure (/usr/local)'
  bl64_fs_create_dir '0755' 'root' 'root' \
    "${sysadmin_local}" \
    "${sysadmin_local_bin}" ||
    return $?

  bl64_msg_show_task 'Create directory structure (/sa)'
  bl64_fs_create_dir '0755' "${sysadmin_user}" "${BL64_VAR_DEFAULT}" \
    "${sysadmin_tmp}" \
    "${sysadmin_lib}" \
    "${sysadmin_bin}" \
    "${sysadmin_var}" ||
    return $?

  bl64_msg_show_task 'Register directory structure'
  # shellcheck disable=SC2016
  bl64_bsh_env_export_variable 'TOOLBOX64_BASHLIB64' "$sysadmin_bashlib64" >"$sysadmin_env" &&
    bl64_bsh_env_export_variable 'TOOLBOX64_BIN' "$sysadmin_bin" >>"$sysadmin_env" &&
    bl64_bsh_env_export_variable 'TOOLBOX64_HOME' "$sysadmin_home" >>"$sysadmin_env" &&
    bl64_bsh_env_export_variable 'TOOLBOX64_LIB' "$sysadmin_lib" >>"$sysadmin_env" &&
    bl64_bsh_env_export_variable 'TOOLBOX64_LOCAL_BIN' "$sysadmin_local_bin" >>"$sysadmin_env" &&
    bl64_bsh_env_export_variable 'TOOLBOX64_OWNER' "$sysadmin_user" >>"$sysadmin_env" &&
    bl64_bsh_env_export_variable 'TOOLBOX64_TMP' "$sysadmin_tmp" >>"$sysadmin_env" &&
    bl64_bsh_env_export_variable 'TOOLBOX64_VAR' "$sysadmin_var" >>"$sysadmin_env" &&
    printf 'export PATH="/usr/sbin:/usr/bin:/sbin:/bin:${TOOLBOX64_LOCAL_BIN}:${TOOLBOX64_BIN}:${TOOLBOX64_LIB}"\n' >>"$sysadmin_env" &&
    printf 'export TOOLBOX64_DEBUG="${TOOLBOX64_DEBUG:-}"\n' >>"$sysadmin_env" ||
    return $?

  bl64_msg_show_task 'Provision bashlib64' &&
    bl64_fs_cp_file '/bashlib64.bash' "$sysadmin_bashlib64" ||
    return $?

  bl64_msg_show_task 'Fix permissions'
  bl64_fs_set_permissions '0755' "${sysadmin_user}" "${BL64_VAR_DEFAULT}" "$sysadmin_home" &&
    bl64_fs_set_permissions '0644' "${sysadmin_user}" "${BL64_VAR_DEFAULT}" "$sysadmin_env" &&
    bl64_fs_set_permissions '0644' "${sysadmin_user}" "${BL64_VAR_DEFAULT}" "$sysadmin_bashlib64" ||
    return $?

  return 0
}

#
# Main
#

declare tb64_bs_process='Bootstrap Toolbox64 environment'
declare -i tb64_bs_status=0

[[ -n "$TOOLBOX64_DEBUG" ]] && bl64_dbg_lib_enable
bl64_check_privilege_root &&
  bl64_pkg_setup ||
  exit $?

bl64_msg_all_enable_verbose
bl64_msg_show_batch_start "$tb64_bs_process"

tb64_bs_check_repository &&
  tb64_bs_provision_sudo &&
  tb64_bs_provision_tb64
tb64_bs_status=$?

bl64_fs_cleanup_full
bl64_msg_show_batch_finish "$tb64_bs_status" "$tb64_bs_process"
exit $tb64_bs_status
