#!/usr/bin/env bash

# shellcheck disable=SC1091
source "/toolbox64.env" || exit $?
# shellcheck source=SCRIPTDIR/../loader/bashlib64.bash disable=SC2154
source "$TOOLBOX64_BASHLIB64" || exit $?

#
# Globals
#

#
# Functions
#

function tb64_k8s_install_k9s() {
  local repo_owner='derailed'
  local repo_name='k9s'
  local target_release=''
  local package_source='k9s_Linux_amd64.tar.gz'
  local app_name='k9s'
  local app_cli="${TOOLBOX64_LOCAL_BIN}/${app_name}"
  local installer_root='/tmp/k9s'
  local installer_package="${installer_root}/${package_source}"

  bl64_msg_show_phase "provision ${app_name}"

  bl64_msg_show_task 'download installer'
  target_release="$(bl64_vcs_github_release_get_latest "$repo_owner" "$repo_name")" &&
    bl64_fs_create_dir "$BL64_VAR_DEFAULT" "$BL64_VAR_DEFAULT" "$BL64_VAR_DEFAULT" "$installer_root" &&
    bl64_rxtx_github_get_asset "$repo_owner" "$repo_name" "$target_release" "$package_source" "$installer_package" &&
    bl64_arc_open_tar "$installer_package" "$installer_root" ||
    return $?

  bl64_msg_show_task 'deploy application'
  bl64_fs_copy_files '0755' "$BL64_VAR_DEFAULT" "$BL64_VAR_DEFAULT" "$TOOLBOX64_LOCAL_BIN" "${installer_root}/${app_name}" &&
    bl64_check_command "$app_cli" &&
    bl64_msg_show_info "Provisioning complete. Application file available at: ${app_cli}" ||
    return $?

  bl64_msg_show_task "clean temporary files (${installer_root})"
  bl64_fs_rm_full "$installer_root"

  return 0
}

#
# Main
#

declare process='Install Kubernetes tools'
declare -i status=1

[[ -n "$TOOLBOX64_DEBUG" ]] && bl64_dbg_lib_enable
bl64_arc_setup &&
  bl64_check_export 'TOOLBOX64_LOCAL_BIN' &&
  bl64_check_privilege_root ||
  exit $?

bl64_msg_all_enable_verbose
bl64_msg_show_batch_start "$process"

tb64_k8s_install_k9s
status=$?

bl64_fs_cleanup_full
bl64_msg_show_batch_finish "$status" "$process"
exit $status
