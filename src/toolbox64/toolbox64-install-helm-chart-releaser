#!/usr/bin/env bash
# Template: 1.0.0
#######################################
# Toolbox64 / Package installer
#
# Author: SerDigital64 (https://github.com/serdigital64)
# Repository: https://github.com/automation64/container64
# Version: 1.0.0
#
#######################################
# Copyright [2023] [serdigital64@gmail.com]
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Imports
#

export TOOLBOX64_BASHLIB64="${TOOLBOX64_BASHLIB64:-/opt/bl64/bashlib64.bash}"
# shellcheck disable=SC1090
source "$TOOLBOX64_BASHLIB64" || { echo "Error: unable to load bashlib64 (${TOOLBOX64_BASHLIB64})" && exit 1; }

#
# Globals
#

export TOOLBOX64_DEBUG="${TOOLBOX64_DEBUG:-}"
export TOOLBOX64_PLATFORM="${TOOLBOX64_PLATFORM:-linux_amd64}"
export TOOLBOX64_PUBLIC_BIN="${TOOLBOX64_PUBLIC_BIN:-/usr/local/bin}"
export TOOLBOX64_SOURCE="${TOOLBOX64_SOURCE:-https://github.com/helm/chart-releaser/releases/download}"
export TOOLBOX64_TARGET="${TOOLBOX64_TARGET:-/opt/chart-releaser}"
export TOOLBOX64_TMP="${TOOLBOX64_TMP:-/tmp}"
export TOOLBOX64_VERSION="${TOOLBOX64_VERSION:-1.6.0}"

#
# Functions
#

#######################################
# Install application packages
#
# Arguments:
#   None. Parameters are imported from Globals
# Outputs:
#   Package installer progress and errors
# Returns:
#   0: package installed ok
#   >0: unable to install package
#######################################
function tb64_install() {
  bl64_dbg_app_show_function
  local package_prefix='chart-releaser'
  local package_sufix='tar.gz'
  local package_name="${package_prefix}_${TOOLBOX64_VERSION}_${TOOLBOX64_PLATFORM}.${package_sufix}"
  local package_url="${TOOLBOX64_SOURCE}/v${TOOLBOX64_VERSION}"
  local work_path=''
  local app_target_mode='0755'
  local app_target_owner='root'
  local app_cli_mode='0755'
  local app_cli='cr'

  bl64_msg_show_task 'download application'
  work_path="$(bl64_fs_create_tmpdir)" || return $?
  bl64_rxtx_web_get_file "${package_url}/${package_name}" "${work_path}/${package_name}" &&
    bl64_arc_open_tar "${work_path}/${package_name}" "${work_path}" ||
    return $?

  bl64_msg_show_task 'deploy application'
  bl64_fs_create_dir "$app_target_mode" "$app_target_owner" "$app_target_owner" "$TOOLBOX64_TARGET" "$TOOLBOX64_PUBLIC_BIN" &&
    bl64_fs_copy_files "$app_cli_mode" "$app_target_owner" "$app_target_owner" "$TOOLBOX64_TARGET" "${work_path}/${app_cli}" ||
    return $?

  bl64_msg_show_task 'publish application'
  # shellcheck disable=SC2086
  "$BL64_FS_CMD_LN" $BL64_FS_SET_LN_SYMBOLIC "${TOOLBOX64_TARGET}/${app_cli}" "${TOOLBOX64_PUBLIC_BIN}/${app_cli}" ||
    return $?

  bl64_msg_show_task 'cleanup temporary files'
  bl64_fs_rm_tmpdir "$work_path"
  return 0
}

#######################################
# Initialize environment
#
# Arguments:
#   None
# Outputs:
#   Initializacion progress messages
# Returns:
#   0: initialization ok
#   >: failed to initialize
#######################################
function tb64_initialize() {
  bl64_dbg_app_show_function

  bl64_arc_setup &&
    bl64_check_privilege_root ||
    return $?
}

#
# Main
#

declare tb64_task_title='Install package: Helm Chart Releaser'
declare -i tb64_status=0

bl64_msg_all_enable_verbose
bl64_msg_show_batch_start "$tb64_task_title"

[[ -n "$TOOLBOX64_DEBUG" ]] && bl64_dbg_lib_enable
tb64_initialize &&
  tb64_install
tb64_status=$?

bl64_msg_show_batch_finish "$tb64_status" "$tb64_task_title"
exit $tb64_status
