#!/usr/bin/env bash
#######################################
# Open sandbox environment
#
# * Version: 1.5.0
#
#######################################
# Copyright [2023] [serdigital64@gmail.com]
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Imports
#

# shellcheck source=bin/dev-set
source ./bin/dev-set || { echo 'dev-set:Error: unable to load dev environment' 2>&1 && exit 1; }
# shellcheck source-path=lib/bl64
source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-cnt.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-core.bash" || exit 1

#
# Globals
#

# Dev / Enable debugging? Set to YES to enable
export DEV_CICD_DEBUG="${DEV_CICD_DEBUG:-}"
# Lab / Container Registry
DEV_CICD_LAB_REGISTRY="${DEV_CICD_LAB_REGISTRY:-ghcr.io/automation64}"
export DEV_CICD_LAB_REGISTRY
# Lab / Default image
DEV_CICD_LAB_IMAGE="${DEV_CICD_LAB_IMAGE:-base/alpine-3-base}"
export DEV_CICD_LAB_IMAGE

#
# Functions
#

function dev_lab_open() {
  bl64_dbg_app_show_function "$@"
  local dev_lab_image="$1"
  local dev_lab_path_source='/source'
  local dev_lab_path_project='/project'
  local dev_lab_entrypoint='bash'

  bl64_msg_show_task "open sanbox environment (${dev_lab_image})"
  bl64_cnt_run_interactive \
    --entrypoint="$dev_lab_entrypoint" \
    --workdir="$dev_lab_path_project" \
    --mount "type=bind,source=${DEV_PATH_SRC},target=${dev_lab_path_source},readonly" \
    --mount "type=bind,source=${DEV_PATH_ROOT},target=${dev_lab_path_project},readonly" \
    "${DEV_CICD_LAB_REGISTRY}/${dev_lab_image}"
}

function dev_lab_initialize() {
  bl64_dbg_app_show_function
  bl64_cnt_setup
}

#
# Main
#

declare dev_lab_image="${1:-$DEV_CICD_LAB_IMAGE}"

[[ -n "$DEV_CICD_DEBUG" ]] && bl64_dbg_all_enable
dev_lab_initialize || exit $?
bl64_msg_all_enable_verbose

bl64_msg_show_batch_start 'dev-lab-container'
dev_lab_open "$dev_lab_image"
bl64_msg_show_batch_finish $? 'dev-lab-container'
