#!/usr/bin/env bash
#
# Dev / Lib / Cosign / Download
#
# * Template: 1.4.0
#

#
# Imports
#

# shellcheck source=bin/dev-set
source ./bin/dev-set || { echo 'dev-set:Error: unable to load dev environment' 2>&1 && exit 1; }
# shellcheck source=lib/bl64/bashlib64-core.bash
source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-core.bash" || exit 1

#
# Globals
#

# Dev / Enable debugging? Set to YES to enable
export DEV_CICD_DEBUG="${DEV_CICD_DEBUG:-}"
# Lib / Cosign / Target
export DEV_LIB_COSIGN_TARGET="${DEV_LIB_COSIGN_TARGET:-${DEV_PATH_LIB}/cosign}"
# Lib / Cosign / Command
export DEV_LIB_COSIGN_BIN="${DEV_LIB_COSIGN_TARGET}/cosign"
# Lib / Cosign / Installer64 parameters
export INST64_BASHLIB64="$DEV_LIB_BASHLIB64_TARGET"
export INST64_COSIGN_TARGET="$DEV_LIB_COSIGN_TARGET"
export INST64_COSIGN_SYSTEM_WIDE="$BL64_VAR_OFF"

#
# Functions
#

function dev_lib_cosign() {
  bl64_dbg_app_show_function
  "${DEV_LIB_INSTALLER64_TARGET}/install-cosign"
}

function dev_lib_cosign_initialize() {
  bl64_dbg_app_show_function
  bl64_check_directory "$DEV_LIB_INSTALLER64_TARGET" 'Installer64 not found, please run ./bin/dev-lib-installer64 and try again'
}

#
# Main
#

[[ -n "$DEV_CICD_DEBUG" ]] && bl64_dbg_all_enable
dev_lib_cosign_initialize || exit $?

bl64_msg_all_enable_verbose
bl64_msg_show_batch_start 'dev-lib-cosign'
dev_lib_cosign
bl64_msg_show_batch_finish $? 'dev-lib-cosign'
